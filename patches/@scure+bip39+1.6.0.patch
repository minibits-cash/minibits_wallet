diff --git a/node_modules/@scure/bip39/src/index.ts b/node_modules/@scure/bip39/src/index.ts
index 4284c3e..6ff83b2 100644
--- a/node_modules/@scure/bip39/src/index.ts
+++ b/node_modules/@scure/bip39/src/index.ts
@@ -33,6 +33,7 @@ import { pbkdf2, pbkdf2Async } from '@noble/hashes/pbkdf2';
 import { sha256, sha512 } from '@noble/hashes/sha2';
 import { abytes, anumber, randomBytes } from '@noble/hashes/utils';
 import { utils as baseUtils } from '@scure/base';
+import QuickCrypto from 'react-native-quick-crypto'
 
 // Japanese wordlist
 const isJapanese = (wordlist: string[]) => wordlist[0] === '\u3042\u3044\u3053\u304f\u3057\u3093';
@@ -170,5 +171,9 @@ export function mnemonicToSeed(mnemonic: string, passphrase = ''): Promise<Uint8
  * // new Uint8Array([...64 bytes])
  */
 export function mnemonicToSeedSync(mnemonic: string, passphrase = ''): Uint8Array {
-  return pbkdf2(sha512, normalize(mnemonic).nfkd, psalt(passphrase), { c: 2048, dkLen: 64 });
+  // return pbkdf2(sha512, normalize(mnemonic).nfkd, psalt(passphrase), { c: 2048, dkLen: 64 });
+  
+  const updated = new Uint8Array(QuickCrypto.pbkdf2Sync(normalize(mnemonic).nfkd, psalt(passphrase), 2048, 64, 'sha512'));
+  // console.log('[@scure.bip39.mnemonicToSeedSync] Patched to use QuickCrypto.pbkdf2Sync')
+  return updated
 }
